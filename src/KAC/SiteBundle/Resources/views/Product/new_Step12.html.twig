<form class="form" method="post" novalidate="novalidate" action="{{ path(app.request.attributes.get('_route'), app.request.query.all | craue_removeDynamicStepNavigationParameter(flow)) }}" {{ form_enctype(form) }}>
    <div class="widget-group clearfix">
        <div class="widget widget-1-of-1">
            <div class="ui-widget mbl">
                <header class="ui-widget-header ui-corner-top">
                    <span class="nav-icon ui-button-icon-primary ui-icon icon-white icon-1249"></span>
                    <h2>12. Product Links</h2>
                </header>
                <section class="ui-widget-content ui-corner-bottom">
                    {% include 'KACSiteBundle:Includes:formErrors.html.twig' %}
                    <fieldset class="pbm">
                        <table class="form-table sortable" id="linkList" data-prototype="{% filter escape %}{% include 'KACSiteBundle::newFieldRow.html.twig' with {'form': form.links.vars.prototype} %}{% endfilter %}">
                            <thead>
                                <tr>
                                    <th width="1">&nbsp;</th>
                                    <th width="1">&nbsp;</th>
                                    <th>Product</th>
                                    <th>Link Type</th>
                                    <th width="1">&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="no-data ui-helper-hidden">
                                    <td colspan="5">
                                        <div class="message message-help mas">
                                            <span class="ui-button-icon-primary ui-icon-small icon-small-yellow icon-small-383"></span>
                                            <p>There are no product links currently setup. Add a link using the "Add" button below.</p>
                                        </div>
                                    </td>
                                </tr>
                                {% for link in form.links %}
                                    <tr>{{ form_widget(link) }}</tr>
                                {% endfor %}
                            </tbody>
                        </table>
                        {% do form.links.setRendered() %}
                    </fieldset>
                    {{ form_rest(form) }}
                    {% include 'CraueFormFlowBundle:FormFlow:stepField.html.twig' %}
                    {% include 'KACSiteBundle:Product:newControls.html.twig' %}
                </section>
            </div>
        </div>
    </div>
</form>
<script type="text/javascript">
    var listUrl = "{{ path('api_products_get') }}",
        itemUrl = "{{ path('api_products_get_product', {'id': -1}) }}";


    var productsUrl = "{{ path('api_products_get') }}";
    var productUrl = "{{ path('api_products_get_product', {'id': -1}) }}";
    $(document).ready(function() {
        generateProductSelect($(".linked-product"));
        $("#linkList").on("rowadded", function() {
            generateProductSelect($(".linked-product"));
        });
    });


    var googleDepartmentsUrl = "{{ path('api_taxonomies_get') }}";
    var googleDepartmentUrl = "{{ path('api_taxonomies_get_taxonomy', {'id': -1}) }}";
    $(".select-google-department").select2({
        placeholder: "- Select a Google Department -",
        minimumInputLength: 1,
        quietMillis: 100,
        ajax: {
            url: googleDepartmentsUrl,
            dataType: 'json',
            data: function (term, page) {
                return {
                    q: term,
                    page: page
                };
            },
            results: function (data, page) {
                var more = (page * 10) < data.total;
                return {results: data.taxonomies, more: more};
            }
        },
        initSelection: function(element, callback) {
            var id = $(element).val();
            if (id !== "") {
                $.ajax(googleDepartmentUrl.replace(/-1/, id), {
                    dataType: "json"
                }).done(function(data) { callback(data); });
            }
        },
        formatResult: function(taxonomy) {
            if (taxonomy != 'undefined') {
                return taxonomy.name;
            }
            return "";
        },
        formatSelection: function(taxonomy) {
            if (taxonomy != 'undefined') {
                return taxonomy.name;
            }
            return "";
        }
    });


    function generateProductSelect($element) {
        $element.select2({
            placeholder: "Search for a product",
            minimumInputLength: 1,
            quietMillis: 100,
            ajax: {
                url: listUrl,
                dataType: 'json',
                data: function (term, page) {
                    return {
                        q: term, // search term
                        page: page
                    };
                },
                results: function (data, page) { // parse the results into the format expected by Select2.
                    var more = (page * 10) < data.total; // whether or not there are more results available

                    // notice we return the value of more so Select2 knows if more results can be loaded
                    return {results: data.products, more: more};
                }
            },
            initSelection: function(element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected movie's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the movie name is shown preselected
                var id=$(element).val();
                if (id!=="") {
                    $.ajax(itemUrl.replace(/-1/, id), {
                        dataType: "json"
                    }).done(function(data) { callback(data); });
                }
            },
            formatResult: function(product) {
                if(product.descriptions.length > 0) {
                    return product.descriptions[0].name;
                }

                return "";
            },
            formatSelection: function(product) {
                if(product.descriptions.length > 0) {
                    return product.descriptions[0].name;
                }

                return "";
            }
        })
    }
</script>