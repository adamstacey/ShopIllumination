<form class="form" method="post" novalidate="novalidate" action="{{ path(app.request.attributes.get('_route'), app.request.query.all | merge ({'productId': product.id, }) | craue_removeDynamicStepNavigationParameter(flow)) }}" {{ form_enctype(form) }}>
    <div class="widget-group clearfix">
        <div class="widget widget-1-of-1">
            <div class="ui-widget mbl">
                <header class="ui-widget-header ui-corner-top">
                    <span class="nav-icon ui-button-icon-primary ui-icon icon-white icon-69"></span>
                    <h2>2. Features</h2>
                </header>
                <section class="ui-widget-content ui-corner-bottom">
                    {% include 'KACSiteBundle:Variant:newErrors.html.twig' %}

                    <fieldset class="pbm">
                        <table class="form-table" id="feature-list" data-prototype="{{ form_widget(form.features.vars.prototype) | e }}">
                            <thead>
                            <tr>
                                <th>Group</th>
                                <th>Feature</th>
                                <th>&nbsp;</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for feature in form.features %}
                                <tr>{{ form_widget(feature) }}</tr>
                            {% endfor %}
                            </tbody>
                            {% do form.features.setRendered() %}
                        </table>
                    </fieldset>

                    {{ form_rest(form) }}
                    {% include 'CraueFormFlowBundle:FormFlow:stepField.html.twig' %}
                    {% include 'KACSiteBundle:Variant:newControls.html.twig' %}
                </section>
            </div>
        </div>
    </div>
</form>
<script type="text/javascript">
    $(document).ready(function() {
        $(document).on('change', '.feature-group', function() {
            var $featureGroupId = $(this).val();
            var $selectObject = $(this).closest("tr").find(".feature");
            $selectObject.prev("span").html("Loading Features...");
            $.getJSON('{{ path('api_features', {'featureGroupId': '-1'}) }}'.replace(/-1/, $featureGroupId), function(data) {
                $selectObject.val([]).empty();
                for (var $feature = 0; $feature < data.features.length; $feature++) {
                    var $option = $('<option/>', { value: data.features[$feature]['id'] }).text(data.features[$feature]['name']).prop('selected', $feature == 0);
                    $option.appendTo($selectObject);
                }
                $.uniform.update($selectObject);
            });
        });
    })
</script>