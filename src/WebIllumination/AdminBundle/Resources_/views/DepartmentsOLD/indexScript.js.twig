<script type="text/javascript" defer="defer">
	{# Check all elements are loaded #}
	var $listingCountLoaded = false;
	var $listingLoaded = false;
	var $listingPaginationLoaded = false;
		
	{# Setup the department list #}
	var departments = [
		{% for department in data.departments %}
			{
				value: "{{ department.id }}",
				label: "{{ department.name }}"
			}{% if not loop.last %},{% endif %}
		{% endfor %}
	];
	
	$(document).ready(function() {
	
		{# ###### #}
		{# FILTER #}
		{# ###### #}
		
		{# Show/Hide filter #}
		$(".action-show-hide-filter").live('click', function() {
			if ($("#listing-filter").is(":hidden"))
			{
				$("#listing-filter").slideDown();
				$("#filter-button > span.ui-button-icon-primary").removeClass("ui-icon-triangle-1-s").addClass("ui-icon-triangle-1-n");
			} else {
				$("#listing-filter").slideUp();
				$("#filter-button > span.ui-button-icon-primary").removeClass("ui-icon-triangle-1-n").addClass("ui-icon-triangle-1-s");
			}
		});
		
		{# Show/Hide filter sections #}
		$(".action-show-hide-filter-section").live('click', function() {
			var $filterSection = $("#filter-section-"+$(this).attr("data-filter-section"));
			var $filterSectionButton = $(this).find("span.ui-button-icon-primary");
			if ($filterSection.is(":hidden"))
			{
				$filterSection.slideDown();
				$filterSectionButton.removeClass("ui-icon-triangle-1-s").addClass("ui-icon-triangle-1-n");
			} else {
				$filterSection.slideUp();
				$filterSectionButton.removeClass("ui-icon-triangle-1-n").addClass("ui-icon-triangle-1-s");
			}
		});
				
		{# Searches #}		
		$("#filter-department-search").autocomplete({
			source: departments,
			select: function(event, ui) {
				$("#department-"+ui.item.value).click();
				$("#department-"+ui.item.value).attr("checked", "checked");
				$("#uniform-department-"+ui.item.value+" span").addClass("checked");
				$("#filter-departments").animate({scrollTop: ($("#filter-departments").scrollTop() + ($("#uniform-department-"+ui.item.value).position().top - 60))}, 'slow');
				$("#filter-department-search").val("");
				return false;
			}
		});
		
		{# Clear the filters #}
		$(".action-clear-filters").live('click', function() {
			$("#listing-filter input, #listing-filter textarea, #listing-filter select").val("");
			$("#listing-filter input[type='radio'], #listing-filter input[type='checkbox']").removeAttr("checkbox");
			$("#listing-filter div.checker span, #listing-filter div.radio span").removeClass("checked");
			$("#listing-filter select option").removeAttr("selected");
			$("#listing-filter select").each(function() {
				var $selectObject = $(this);
				$selectObject.val($("options:first", $selectObject).val());
			});
			$(".range-slider").each(function() {
				var $sliderObject = $(this);
				var $fromObject = $sliderObject.prev().find(".from-value");
				var $toObject = $sliderObject.prev().find(".to-value");
				$fromObject.val($sliderObject.attr("data-from"));
				$toObject.val($sliderObject.attr("data-to"));
				$sliderObject.slider("option", "values", [parseInt($fromObject.val()), parseInt($toObject.val())]);
			});
			$(".filter-section").slideUp();
			$(".filter-scrollable").animate({scrollTop: 0}, 'slow');
			$("#listing-current-page").val('1');
			loadResults();
		});
		
		{# Update the filter #}
		$("#listing-filter .filter-checkbox input[type='checkbox']").live('click change', function() {
			var $field = $(this).attr("data-field");
			var $valuesToCollect = $("#listing-filter .filter-checkbox input[data-field='"+$field+"']:checked").length;
			var $valuesCollected = 0;
			var $values = new Array();
			$("#listing-filter .filter-checkbox input[data-field='"+$field+"']:checked").each(function(index) {
				$values[$values.length] = $(this).val();
				$valuesCollected = $valuesCollected + 1;
				if ($valuesCollected == $valuesToCollect)
				{
					$("#"+$field).val($values.join("|"));
					loadResults();
				}
			});
			if ($valuesToCollect == 0)
			{
				$("#"+$field).val("");
				loadResults();
			}
		});
		$("#listing-filter input").live('keyup', function() {
			if ($(this).val().length > 2)
			{
				loadResults();
			}
		});
		$(".action-update-results").live('click', function() {
			loadResults();
		});
		
		{# ######## #}
		{# LISTINGS #}
		{# ######## #}
		
		{# Update sort order or max results #}
		$("#listing-sort-order, #listing-max-results").live('change', function() {
			$("#listing-current-page").val('1');
			loadResults();
		});
		
		{# Change the page number #}
		$(".page, .page-navigation").live('click', function() {
			$("#listing-current-page").val($(this).attr("data-page"));
			loadResults();
		});
		
		{# ###### #}
		{# SELECT #}
		{# ###### #}
				
		{# Select all #}
		$(".action-select-all").live('click', function() {
			if ($(".action-select-all").is(":checked"))
			{
				$(".action-select").attr("checked", "checked");
				$(".action-select").parent().addClass("checked");
				$("tr.item").addClass("selected");
			} else {
				$(".action-select").attr("checked", false);
				$(".action-select").parent().removeClass("checked");
				$("tr.item").removeClass("selected");
			}
		});
		
		{# Select single item #}
        $(".action-select").live('click', function() {
        	var $id = $(this).attr("data-id");
        	if ($(this).is(":checked"))
        	{
        		$("#item-"+$id).addClass("selected");
        	} else {
        		$("#item-"+$id).removeClass("selected");
        	}
        });
        
        {# Change status #}
		$(".listing-status").live('change', function() {
			var $id = $(this).attr("data-id");
			$("#listing-select-"+$id).attr("checked", "checked");
			$("#listing-select-"+$id).parent().addClass("checked");
			$("tr#item-"+$id).addClass("selected");
		});
		
		{# ###### #}
		{# UPDATE #}
		{# ###### #}
		   		                
        {# Multiple update #}
        $(".action-multiple-update").live('click', function() {
        	if ($(".action-select:checked").length > 0)
			{
				resetInteractions();
	        	$("#ajax_loading").show();
				var $numberOfItemsToUpdate = $(".action-select:checked").length;
				var $numberOfItemsUpdated = 0;
				if ($numberOfItemsToUpdate > 0)
				{
					$(".action-select:checked").each(function() {
						var $id = $(this).attr("data-id");
						$.ajax({
							type: "GET",
							url: "{{ path('admin_'~settings.multipleItemsPath~'_ajax_update') }}",
							data: {
								id: $id,
		      					status: $("#listing-status-"+$id).val()
							},
							error: function(data) {
								$numberOfItemsUpdated = $numberOfItemsUpdated + 1;
								loadNotificationMessage("message-error", "Sorry, there was a problem updating the selected {{ settings.multipleItemsDescription }}. Please try again.");
						      	if ($numberOfItemsUpdated >= $numberOfItemsToUpdate)
						      	{
									$("#ajax_loading").hide();
									$("#listing-current-page").val('1');
									loadResults();
								}
				      		},
							success: function(data) {
								$numberOfItemsUpdated = $numberOfItemsUpdated + 1;
								loadNotificationMessage("message-success", "The {{ settings.multipleItemsDescription }} have been successfully updated.");
								if ($numberOfItemsUpdated >= $numberOfItemsToUpdate)
						      	{
									$("#ajax_loading").hide();
									$("#listing-current-page").val('1');
									loadResults();
								}
							}
						});
					});
				} else {
					loadNotificationMessage("message-error", "Sorry, you did not select any {{ settings.multipleItemsDescription }} to update.");
					$("#ajax_loading").hide();
				}
			}
        });
		
		{# ###### #}
		{# DELETE #}
		{# ###### #}
		
		{# Confirm delete #}
        $(".action-confirm-delete").live('click', function() {
        	showMoreInformation($(this).attr("data-id"), 'confirm-delete', $("tr#item-"+$(this).attr("data-id")+" button.action-confirm-delete"));
        });
   		
   		{# Delete #}
        $(".action-delete").live('click', function() {
        	var $id = $(this).attr("data-id");
			$.ajax({
		    	url: "{{ path('admin_'~settings.multipleItemsPath~'_ajax_delete') }}",
		      	type: "GET",
		      	dataType: "json",
		      	data: {
		      		id: $id
		      	},
		      	beforeSend: function() {
		      		resetInteractions();
		      		$("#ajax_loading").show();
		      	},
		      	error: function(data) {
		      		loadNotificationMessage("message-error", "Sorry, there was a problem deleting the {{ settings.singleItemDescription }}. Please try again.");
		      	},
		      	success: function(data) {
		      		if (data.response == "error")
		      		{
		      			loadNotificationMessage("message-error", "Sorry, there was a problem deleting the {{ settings.singleItemDescription }}. Please try again.");
		      		} else {
			      		$("#listing-current-page").val('1');
			      		loadResults();
						loadNotificationMessage("message-success", "The {{ settings.singleItemDescription }} has been successfully deleted.");
					}
		      	}
		   	});
        });
        
		{# Confirm multiple delete #}        
        $(".action-confirm-multiple-delete").live('click', function() {
        	if ($(".action-select:checked").length > 0)
			{
	    		$("#confirm-multiple-delete").fadeIn();
	    		$("html, body").animate({scrollTop: $("#confirm-multiple-delete").offset().top - 50},'slow');
	    	} else {
	    		loadNotificationMessage("message-error", "Sorry, you did not select any {{ settings.multipleItemsDescription }} to delete.");
	    	}
        });
        
        {# Cancel multiple delete #} 
        $(".action-cancel-multiple-delete").live('click', function() {
        	$("#confirm-multiple-delete").fadeOut();
        });
        
        {# Multiple delete #}
        $(".action-multiple-delete").live('click', function() {
        	if ($(".action-select:checked").length > 0)
			{
				resetInteractions();
	        	$("#ajax_loading").show();
	        	$("#confirm-multiple-delete").hide();
				var $numberOfItemsToDelete = $(".action-select:checked").length;
				var $numberOfItemsDeleted = 0;
				if ($numberOfItemsToDelete > 0)
				{
					$(".action-select:checked").each(function() {
						var $id = $(this).attr("data-id");
						$.ajax({
							type: "GET",
							url: "{{ path('admin_'~settings.multipleItemsPath~'_ajax_delete') }}",
							data: {
								id: $id
							},
							error: function(data) {
								$numberOfItemsDeleted = $numberOfItemsDeleted + 1;
								loadNotificationMessage("message-error", "Sorry, there was a problem deleting the selected {{ settings.multipleItemsDescription }}. Please try again.");
						      	if ($numberOfItemsDeleted >= $numberOfItemsToDelete)
						      	{
									$("#ajax_loading").hide();
									$("#listing-current-page").val('1');
									loadResults();
								}
				      		},
							success: function(data) {
								$numberOfItemsDeleted = $numberOfItemsDeleted + 1;
								if (data.response == "error")
					      		{
					      			loadNotificationMessage("message-error", "Sorry, there was a problem deleting the selected {{ settings.multipleItemsDescription }}. Please try again.");
					      		} else {
									loadNotificationMessage("message-success", "The {{ settings.multipleItemsDescription }} have been successfully deleted.");
								}
								if ($numberOfItemsDeleted >= $numberOfItemsToDelete)
						      	{
									$("#ajax_loading").hide();
									$("#listing-current-page").val('1');
									loadResults();
								}
							}
						});
					});
				} else {
					loadNotificationMessage("message-error", "Sorry, you did not select any {{ settings.multipleItemsDescription }} to delete.");
					$("#ajax_loading").hide();
				}
			}
        });
        
        {# Close the more information panels #}
		$(".action-close-more-information").live('click', function() {
			$(".more-information, .more-information-detail").hide();
			$("tr.item td").removeAttr("style");
			$("tr.item button").removeClass("ui-button-blue");
			$.mask.close();
		});
		
		{# #### #}
		{# LOAD #}
		{# #### #}
		
		$("#listing-current-page").val('1');
		loadResults();
	});
	{% include 'WebIlluminationAdminBundle:'~settings.multipleItemsModel~':indexFunctions.js.twig' with {'settings': settings, 'data': data} %}	
</script>