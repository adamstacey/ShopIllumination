{# Save the description section #}
$(".action-update-description-section").live('click', function() {
	var updateDescriptionValidator = $("#description :input").validator({
		position : 'bottom left', 
		offset : [0, 0], 
		messageClass : 'form-error', 
   		message : '<div><em/></div>'
	});
	if (updateDescriptionValidator.data("validator").checkValidity())
	{
    	$("#ajax_loading").show();
    	$.ajax({
			type: "POST",
			dataType: "json",
			url: "{{ path('admin_'~settings.multipleItemsPath~'_ajax_update_description_section') }}",
			beforeSend: function() {
				resetInteractions();
				$("#ajax_loading").show();
			},
			data: {
				id: {{ data.brand.id }},
				description: $("#form-description").val(),
				about: $("#form-about").val(),
				history: $("#form-history").val(),
				moreInformation: $("#form-more-information").val()
			},
			error: function(data) {
				loadNotificationMessage("message-error", "Sorry, there was a problem saving the {{ settings.singleItemDescription }}. Please try again.");
				finishInteractions();
		    },
			success: function(data) {
				var descriptionEditor = tinyMCE.get("form-description");
				descriptionEditor.isNotDirty = 1;
				var aboutEditor = tinyMCE.get("form-about");
				aboutEditor.isNotDirty = 1;
				var historyEditor = tinyMCE.get("form-history");
				historyEditor.isNotDirty = 1;
				var moreInformationEditor = tinyMCE.get("form-more-information");
				moreInformationEditor.isNotDirty = 1;
				if (data.response == 'success')
				{
					loadNotificationMessage("message-success", "The {{ settings.singleItemDescription }} was successfully updated.");
				} else {
					loadNotificationMessage("message-error", "Sorry, there was a problem saving the {{ settings.singleItemDescription }}. Please try again.");
				}
				finishInteractions();
				if ($("#description-tab-to-redirect-to").val() > -1)
				{
					$("#description-requires-update").val(0);
					$("#description-confirm-leave").hide();
					$(".sidebar-tabs").tabs("select", parseInt($("#description-tab-to-redirect-to").val()));
					$("#description-tab-to-redirect-to").val(-1);
				} else {
					$("#description-requires-update").val(0);
					$("#description-tab-to-redirect-to").val(-1);
				}
			}
		});
	}
});

{# Detect if an update is required #}
$("#description input, #description select, #description textarea").live("change", function() {
	$("#description-requires-update").val(1);
});

{# Check if section needs updating #}
$(".sidebar-tabs").bind("tabsselect", function(event, ui) {
	var descriptionEditor = tinyMCE.get("form-description");
	if (descriptionEditor.isDirty())
	{
		$("#description-requires-update").val(1);
	}
	var aboutEditor = tinyMCE.get("form-about");
	if (aboutEditor.isDirty())
	{
		$("#description-requires-update").val(1);
	}
	var historyEditor = tinyMCE.get("form-history");
	if (historyEditor.isDirty())
	{
		$("#description-requires-update").val(1);
	}
	var moreInformationEditor = tinyMCE.get("form-more-information");
	if (moreInformationEditor.isDirty())
	{
		$("#description-requires-update").val(1);
	}
	if ($("#description-requires-update").val() > 0)
	{
		$("#description-tab-to-redirect-to").val(ui.index);
		$("#description-confirm-leave").fadeIn();
		$("html, body").animate({scrollTop: $("#description").offset().top + 35},'slow');
		return false;
	}
	return true;
});

{# Leave section without saving #}
$(".action-leave-description").live('click', function() {
	var editor = tinyMCE.get("form-description");
	editor.isNotDirty = 1;
	$("#description-requires-update").val(0);
	$(".sidebar-tabs").tabs("select", parseInt($("#description-tab-to-redirect-to").val()));
	$("#description-tab-to-redirect-to").val(-1);
	$("#description-confirm-leave").hide();
	$("html, body").animate({scrollTop: $("#description").offset().top + 35},'slow');
});