{# Function to update all contacts #}
function updateContacts()
{
	$errorOccurred = false;
	$numberOfElementsToProcess = $("input.contact-requires-update[value='1']").length;
	$numberOfElementsProcessed = 0;
	if ($numberOfElementsToProcess > 0)
	{
		$("#ajax_loading").show();
		$("input.contact-requires-update[value='1']").each(function(index) {
			$elementIndex = String($(this).attr("data-index"));
			$.ajax({
		    	url: "{{ path('system_ajax_update_contact') }}",
		      	type: "GET",
		      	dataType: "json",
		      	data: {
		      		id: $("#form-contact-id-"+$elementIndex).val(),
		      		objectId: '{{ objectId }}',
		      		objectType: '{{ objectType }}',
		      		displayName: $("#form-contact-display-name-"+$elementIndex).val(),
		      		organisationName: $("#form-contact-organisation-name-"+$elementIndex).val(),
		      		contactTitleId: $("#form-contact-contact-title-id-"+$elementIndex).val(),
		      		firstName: $("#form-contact-first-name-"+$elementIndex).val(),
		      		middleName: $("#form-contact-middle-name-"+$elementIndex).val(),
		      		lastName: $("#form-contact-last-name-"+$elementIndex).val(),
		      		displayOrder: $("#form-contact-display-order-"+$elementIndex).val(),
		      		elementIndex: $elementIndex
		      	},
		      	error: function(data) {
		        	$errorOccurred = true;
		        	$("#contact-"+$elementIndex).addClass("ui-state-error");
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-error-message-text").html('Problems occurred while trying to update your contacts. Please try again.');
							$("#contact-error-message").fadeIn();
						} else {
							$("#contact-success-message-text").html('Your contacts were successfully updated.');
							$("#contact-success-message").fadeIn();
						}
						$("html, body").animate({scrollTop: $("#contacts").offset().top + 35},'slow');
						$("#ajax_loading").hide();
						if ($("#contacts-tab-to-redirect-to").val() > -1)
						{
							$("#contacts .message").hide();
							$(".sidebar-tabs").tabs("select", parseInt($("#contacts-tab-to-redirect-to").val()));
						}
		        	}
		      	},
		      	success: function(data) {
	      			if (data.response == 'success')
	      			{
	      				$("#contact-"+data.elementIndex).removeClass("ui-state-error");
	      				$("#form-contact-id-"+data.elementIndex).val(data.id);
	      				$("#form-contact-requires-update-"+data.elementIndex).val("0");
	      				loadContactNumbers(data.id, data.elementIndex);
	      				loadContactAddresses(data.id, data.elementIndex);
	      				loadContactEmailAddresses(data.id, data.elementIndex);
	      				loadContactWebAddresses(data.id, data.elementIndex);
	      			} else {
	      				$("#contact-"+data.elementIndex).addClass("ui-state-error");
	      				$errorOccurred = true;
	      			}
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-error-message-text").html('Problems occurred while trying to update your contacts. Please try again.');
							$("#contact-error-message").fadeIn();
						} else {
							$("#contact-success-message-text").html('Your contacts were successfully updated.');
							$("#contact-success-message").fadeIn();
						}
						$("html, body").animate({scrollTop: $("#contacts").offset().top + 35},'slow');
						$("#ajax_loading").hide();
						if ($("#contacts-tab-to-redirect-to").val() > -1)
						{
							$("#contacts .message").hide();
							$(".sidebar-tabs").tabs("select", parseInt($("#contacts-tab-to-redirect-to").val()));
						}
		        	}
		      	}
		   	});
		});
	}
}

{# Function to load new contact #}
function loadNewContact()
{
	$("#ajax_loading").show();
	$nextElement = parseInt($("#contact-count").val()) + 1;
	$("#contact-count").val($nextElement);
	$.ajax({
    	url: "{{ path('system_ajax_add_contact') }}",
      	type: "GET",
      	data: {
      		id: $nextElement,
      		objectId: '{{ objectId }}',
      		objectType: '{{ objectType }}'
      	},
      	error: function(data) {
        	$("#contact-error-message-text").html('Sorry, there was an error adding a new contact. Please try again.');
			$("#contact-error-message").fadeIn();
      	},
      	success: function(data) {
  			$("#form-contacts-container").append(data);
			$("#contact-"+$nextElement.toString()+" :checkbox:not(.no-uniform), #contact-"+$nextElement.toString()+" :radio:not(.no-uniform), #contact-"+$nextElement.toString()+" select:not(.no-uniform), #contact-"+$nextElement.toString()+" :file:not(.no-uniform)").uniform();
			$("#contact-"+$nextElement.toString()).fadeIn();
			$("#contact-"+$nextElement+" .button").each(function () {
	            $(this).button({
	            	icons: {
	                	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
	                    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
	        	});
				$(".contact-container .accordion").accordion({
			    	autoHeight: false,
			    	collapsible: true,
			    	active: false
			    });
	        });
	        reOrderContacts();
	        $(".selector, .uploader").addClass("full");
	        $("html, body").animate({scrollTop: $("#contact-"+$nextElement).offset().top - 100},'slow');
	        $("#ajax_loading").hide();
      	}
   	});
}

{# Function to re-order the contact indexes #}
function reOrderContacts()
{
	$("#contacts .message").hide();
	$(".form-error").remove();
	$contactCount = 1;
	$numberOfElementsToProcess = $("li.contact-container:visible").length;
	$numberOfElementsProcessed = 0;
	$("li.contact-container:visible").each(function(index) {
		$row = $(this);
		if ($row.find("input.contact-display-order").val() != $contactCount)
		{
			if ($row.find("input.contact-id").val() > 0)
			{
				$row.find("input.contact-requires-update").val("1");
			}
		}
		$row.find("input.contact-display-order").val($contactCount);
	    $contactCount++;
	    $numberOfElementsProcessed++;
	    if ($numberOfElementsProcessed == $numberOfElementsToProcess)
	    {
	    	updateContacts();
	    }
	});
	$("li.contact-container:hidden").each(function(index) {
		$(this).remove();
	});
}

{###################}
{# CONTACT NUMBERS #}
{###################}
		
{# Load the contact numbers #}	
function loadContactNumbers($contactId, $elementIndex)
{
	$.ajax({
		type: "GET",
		url: "{{ path('system_ajax_get_contact_numbers') }}",
		beforeSend: function() {
			if ($("#ajax-contact-numbers-"+$contactId).length < 1)
			{
				$("#contact-"+$elementIndex+" .contact-numbers").html('<div id="contact-number-loading-error-'+$contactId+'" class="ui-widget message margin-bottom-5 ui-helper-hidden"><div class="ui-state-error no-margin-top ui-corner-all"><span class="ui-icon ui-icon-alert"></span><p class="no-margin"><strong>ERROR:</strong> Sorry, there was a problem loading the contact numbers.</p></div></div><div class="contact-numbers-loading" data-contact-id="'+$contactId+'" id="ajax-contact-numbers-loading-'+$contactId+'" class="ac"><p class="ac">Loading contact numbers, please wait&hellip;</p><p class="ac"><img class="inline" alt="Loading" width="16" height="16" src="{{ asset('bundles/webilluminationadmin/images/loaders/ajax-loader-eeeeee.gif') }}" /></p></div><div id="ajax-contact-numbers-'+$contactId+'" class="ui-helper-hidden"></div>');
			}
			$("#ajax-contact-numbers-loading-"+$contactId).show();
		},
		data: {
			contactId: $contactId
		},
		error: function(data) {
  			$("#ajax-contact-numbers-loading-"+$contactId).hide();
      		$("#contact-number-loading-error-"+$contactId).fadeIn();
	  	},
		success: function(data) {
			$("#ajax-contact-numbers-"+$contactId).html(data);
			$("#ajax-contact-numbers-"+$contactId+" :checkbox:not(.no-uniform), #ajax-contact-numbers-"+$contactId+" :radio:not(.no-uniform), #ajax-contact-numbers-"+$contactId+" select:not(.no-uniform), #ajax-contact-numbers-"+$contactId+" :file:not(.no-uniform)").uniform();
			$("#ajax-contact-numbers-"+$contactId+" .button").each(function () {
    	        $(this).button({
        	    	icons: {
            	    	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
                	    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
    	    	});
        	});
        	$("#ajax-contact-numbers-"+$contactId+" .message.closeable").prepend('<span class="message-close ui-icon ui-icon-circle-close"></span>').find(".message-close").click(function() {
				$(this).parent().fadeOut(function() {
		        	$(this).hide();
		        });
		    });
			$("#ajax-contact-numbers-"+$contactId).sortable({
				placeholder: "highlighted-sortable",
				items: 'li',
				toleranceElement: '> div',
				update: function(event, ui) {
					reOrderContactNumbers($contactId);
				}
			});
			$(".action-unselect-all-contact-numbers").hide();
			$(".action-confirm-delete-contact-numbers").hide();
	        $("#ajax-contact-numbers-"+$contactId+" .selector").addClass("full");
	        $("#ajax-contact-numbers-"+$contactId).fadeIn();
    	    $("#ajax-contact-numbers-loading-"+$contactId).hide();
		}
	});
}

{# Function to update all contact numbers #}
function updateContactNumbers($contactId)
{
	$errorOccurred = false;
	$numberOfElementsToProcess = $("input.contact-number-requires-update[data-contact-id='"+$contactId+"'][value='1']").length;
	$numberOfElementsProcessed = 0;
	if ($numberOfElementsToProcess > 0)
	{
		$("#ajax_loading").show();
		$("input.contact-number-requires-update[data-contact-id='"+$contactId+"'][value='1']").each(function(index) {
			$elementIndex = String($(this).attr("data-index"));
			$.ajax({
		    	url: "{{ path('system_ajax_update_contact_number') }}",
		      	type: "GET",
		      	dataType: "json",
		      	data: {
		      		id: $("#form-contact-number-id-"+$contactId+"-"+$elementIndex).val(),
		      		contactId: $contactId,
		      		number: $("#form-contact-number-number-"+$contactId+"-"+$elementIndex).val(),
		      		contactNumberTypeId: $("#form-contact-number-contact-number-type-id-"+$contactId+"-"+$elementIndex).val(),
		      		displayOrder: $("#form-contact-number-display-order-"+$contactId+"-"+$elementIndex).val(),
		      		elementIndex: $elementIndex
		      	},
		      	error: function(data) {
		        	$errorOccurred = true;
		        	$("#contact-number-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-number-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact numbers. Please try again.');
							$("#contact-number-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-number-success-message-text-"+$contactId).html('Your contact numbers were successfully updated.');
							$("#contact-number-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-numbers-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	},
		      	success: function(data) {
	      			if (data.response == 'success')
	      			{
	      				$("#contact-number-"+data.contactId+"-"+data.elementIndex).removeClass("ui-state-error");
	      				$("#form-contact-number-id-"+data.contactId+"-"+data.elementIndex).val(data.id);
	      				$("#form-contact-number-requires-update-"+data.contactId+"-"+data.elementIndex).val("0");
	      			} else {
	      				$("#contact-number-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
	      				$errorOccurred = true;
	      			}
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-number-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact numbers. Please try again.');
							$("#contact-number-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-number-success-message-text-"+$contactId).html('Your contact numbers were successfully updated.');
							$("#contact-number-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-numbers-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	}
		   	});
		});
	}
}

{# Function to load new contact numbers #}
function loadNewContactNumber($contactId)
{
	$("#ajax_loading").show();
	$nextElement = parseInt($("#contact-number-count-"+$contactId).val()) + 1;
	$("#contact-number-count-"+$contactId).val($nextElement);
	$.ajax({
    	url: "{{ path('system_ajax_add_contact_number') }}",
      	type: "GET",
      	data: {
      		id: $nextElement,
      		contactId: $contactId
      	},
      	error: function(data) {
        	$("#contact-number-error-message-text-"+$contactId).html('Sorry, there was an error adding a new contact number. Please try again.');
			$("#contact-number-error-message-"+$contactId).fadeIn();
      	},
      	success: function(data) {
  			$("#form-contact-numbers-container-"+$contactId).append(data);
			$("#contact-number-"+$contactId+"-"+$nextElement.toString()+" :checkbox:not(.no-uniform), #contact-number-"+$contactId+"-"+$nextElement.toString()+" :radio:not(.no-uniform), #contact-number-"+$contactId+"-"+$nextElement.toString()+" select:not(.no-uniform), #contact-number-"+$contactId+"-"+$nextElement.toString()+" :file:not(.no-uniform)").uniform();
			$("#contact-number-"+$contactId+"-"+$nextElement.toString()).fadeIn();
			$("#contact-number-"+$contactId+"-"+$nextElement+" .button").each(function () {
	            $(this).button({
	            	icons: {
	                	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
	                    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
	        	});
	        });
	        reOrderContactNumbers($contactId);
	        $(".selector, .uploader").addClass("full");
	        $("html, body").animate({scrollTop: $("#contact-number-"+$contactId+"-"+$nextElement).offset().top - 100},'slow');
	        $("#ajax_loading").hide();
      	}
   	});
}

{# Function to re-order the contact indexes #}
function reOrderContactNumbers($contactId)
{
	$("#ajax-contact-numbers-"+$contactId+" .message").hide();
	$(".form-error").remove();
	$contactNumberCount = 1;
	$numberOfElementsToProcess = $("li.contact-number-container[data-contact-id='"+$contactId+"']:visible").length;
	$numberOfElementsProcessed = 0;
	$("li.contact-number-container[data-contact-id='"+$contactId+"']:visible").each(function(index) {
		$row = $(this);
		if ($row.find("input.contact-number-display-order").val() != $contactNumberCount)
		{
			if ($row.find("input.contact-number-id").val() > 0)
			{
				$row.find("input.contact-number-requires-update").val("1");
			}
		}
		$row.find("input.contact-number-display-order").val($contactNumberCount);
	    $contactNumberCount++;
	    $numberOfElementsProcessed++;
	    if ($numberOfElementsProcessed == $numberOfElementsToProcess)
	    {
	    	updateContactNumbers($contactId);
	    }
	});
	$("li.contact-number-container[data-contact-id='"+$contactId+"']:hidden").each(function(index) {
		$(this).remove();
	});
}

{#####################}
{# CONTACT ADDRESSES #}
{#####################}
		
{# Load the contact addresses #}	
function loadContactAddresses($contactId, $elementIndex)
{
	$.ajax({
		type: "GET",
		url: "{{ path('system_ajax_get_contact_addresses') }}",
		beforeSend: function() {
			if ($("#ajax-contact-addresses-"+$contactId).length < 1)
			{
				$("#contact-"+$elementIndex+" .contact-addresses").html('<div id="contact-address-loading-error-'+$contactId+'" class="ui-widget message margin-bottom-5 ui-helper-hidden"><div class="ui-state-error no-margin-top ui-corner-all"><span class="ui-icon ui-icon-alert"></span><p class="no-margin"><strong>ERROR:</strong> Sorry, there was a problem loading the contact addresses.</p></div></div><div class="contact-addresses-loading" data-contact-id="'+$contactId+'" id="ajax-contact-addresses-loading-'+$contactId+'" class="ac"><p class="ac">Loading contact addresses, please wait&hellip;</p><p class="ac"><img class="inline" alt="Loading" width="16" height="16" src="{{ asset('bundles/webilluminationadmin/images/loaders/ajax-loader-eeeeee.gif') }}" /></p></div><div id="ajax-contact-addresses-'+$contactId+'" class="ui-helper-hidden"></div>');
				$("#ajax-contact-addresses-loading-"+$contactId).show();
			}
		},
		data: {
			contactId: $contactId
		},
		error: function(data) {
  			$("#ajax-contact-addresses-loading-"+$contactId).hide();
      		$("#contact-address-loading-error-"+$contactId).fadeIn();
	  	},
		success: function(data) {
			$("#ajax-contact-addresses-"+$contactId).html(data);
			$("#ajax-contact-addresses-"+$contactId+" :checkbox:not(.no-uniform), #ajax-contact-addresses-"+$contactId+" :radio:not(.no-uniform), #ajax-contact-addresses-"+$contactId+" select:not(.no-uniform), #ajax-contact-addresses-"+$contactId+" :file:not(.no-uniform)").uniform();
			$("#ajax-contact-addresses-"+$contactId+" .button").each(function () {
    	        $(this).button({
        	    	icons: {
            	    	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
                	    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
    	    	});
        	});
        	$("#ajax-contact-addresses-"+$contactId+" .message.closeable").prepend('<span class="message-close ui-icon ui-icon-circle-close"></span>').find(".message-close").click(function() {
				$(this).parent().fadeOut(function() {
		        	$(this).hide();
		        });
		    });
			$("#ajax-contact-addresses-"+$contactId).sortable({
				placeholder: "highlighted-sortable",
				items: 'li',
				toleranceElement: '> div',
				update: function(event, ui) {
					reOrderContactAddresses($contactId);
				}
			});
			$(".action-unselect-all-contact-addresses").hide();
			$(".action-confirm-delete-contact-addresses").hide();
	        $("#ajax-contact-addresses-"+$contactId+" .selector").addClass("full");
	        $("#ajax-contact-addresses-"+$contactId).fadeIn();
    	    $("#ajax-contact-addresses-loading-"+$contactId).hide();
		}
	});
}

{# Function to update all contact addresses #}
function updateContactAddresses($contactId)
{
	$errorOccurred = false;
	$numberOfElementsToProcess = $("input.contact-address-requires-update[data-contact-id='"+$contactId+"'][value='1']").length;
	$numberOfElementsProcessed = 0;
	if ($numberOfElementsToProcess > 0)
	{
		$("#ajax_loading").show();
		$("input.contact-address-requires-update[data-contact-id='"+$contactId+"'][value='1']").each(function(index) {
			$elementIndex = String($(this).attr("data-index"));
			$.ajax({
		    	url: "{{ path('system_ajax_update_contact_address') }}",
		      	type: "GET",
		      	dataType: "json",
		      	data: {
		      		id: $("#form-contact-address-id-"+$contactId+"-"+$elementIndex).val(),
		      		contactId: $contactId,
		      		contactAddressTypeId: $("#form-contact-address-contact-address-type-id-"+$contactId+"-"+$elementIndex).val(),
		      		organisationName: $("#form-contact-address-organisation-name-"+$contactId+"-"+$elementIndex).val(),
		      		contactTitleId: $("#form-contact-address-contact-title-id-"+$contactId+"-"+$elementIndex).val(),
		      		firstName: $("#form-contact-address-first-name-"+$contactId+"-"+$elementIndex).val(),
		      		middleName: $("#form-contact-address-middle-name-"+$contactId+"-"+$elementIndex).val(),
		      		lastName: $("#form-contact-address-last-name-"+$contactId+"-"+$elementIndex).val(),
		      		addressLine1: $("#form-contact-address-address-line-1-"+$contactId+"-"+$elementIndex).val(),
		      		addressLine2: $("#form-contact-address-address-line-2-"+$contactId+"-"+$elementIndex).val(),
		      		addressLine3: $("#form-contact-address-address-line-3-"+$contactId+"-"+$elementIndex).val(),
		      		postZipCode: $("#form-contact-address-post-zip-code-"+$contactId+"-"+$elementIndex).val(),
		      		townCity: $("#form-contact-address-town-city-"+$contactId+"-"+$elementIndex).val(),
		      		countyState: $("#form-contact-address-county-state-"+$contactId+"-"+$elementIndex).val(),
		      		countryCode: $("#form-contact-address-country-code-"+$contactId+"-"+$elementIndex).val(),
		      		displayOrder: $("#form-contact-address-display-order-"+$contactId+"-"+$elementIndex).val(),
		      		elementIndex: $elementIndex
		      	},
		      	error: function(data) {
		        	$errorOccurred = true;
		        	$("#contact-address-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-address-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact addresses. Please try again.');
							$("#contact-address-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-address-success-message-text-"+$contactId).html('Your contact addresses were successfully updated.');
							$("#contact-address-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-addresses-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	},
		      	success: function(data) {
	      			if (data.response == 'success')
	      			{
	      				$("#contact-address-"+data.contactId+"-"+data.elementIndex).removeClass("ui-state-error");
	      				$("#form-contact-address-id-"+data.contactId+"-"+data.elementIndex).val(data.id);
	      				$("#form-contact-address-requires-update-"+data.contactId+"-"+data.elementIndex).val("0");
	      			} else {
	      				$("#contact-address-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
	      				$errorOccurred = true;
	      			}
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-address-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact addresses. Please try again.');
							$("#contact-address-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-address-success-message-text-"+$contactId).html('Your contact addresses were successfully updated.');
							$("#contact-address-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-addresses-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	}
		   	});
		});
	}
}

{# Function to load new contact addresses #}
function loadNewContactAddress($contactId)
{
	$("#ajax_loading").show();
	$nextElement = parseInt($("#contact-address-count-"+$contactId).val()) + 1;
	$("#contact-address-count-"+$contactId).val($nextElement);
	$.ajax({
    	url: "{{ path('system_ajax_add_contact_address') }}",
      	type: "GET",
      	data: {
      		id: $nextElement,
      		contactId: $contactId
      	},
      	error: function(data) {
        	$("#contact-address-error-message-text-"+$contactId).html('Sorry, there was an error adding a new contact address. Please try again.');
			$("#contact-address-error-message-"+$contactId).fadeIn();
      	},
      	success: function(data) {
  			$("#form-contact-addresses-container-"+$contactId).append(data);
			$("#contact-address-"+$contactId+"-"+$nextElement.toString()+" :checkbox:not(.no-uniform), #contact-address-"+$contactId+"-"+$nextElement.toString()+" :radio:not(.no-uniform), #contact-address-"+$contactId+"-"+$nextElement.toString()+" select:not(.no-uniform), #contact-address-"+$contactId+"-"+$nextElement.toString()+" :file:not(.no-uniform)").uniform();
			$("#contact-address-"+$contactId+"-"+$nextElement.toString()).fadeIn();
			$("#contact-address-"+$contactId+"-"+$nextElement+" .button").each(function () {
	            $(this).button({
	            	icons: {
	                	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
	                    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
	        	});
	        });
	        reOrderContactAddresses($contactId);
	        $(".selector, .uploader").addClass("full");
	        $("html, body").animate({scrollTop: $("#contact-address-"+$contactId+"-"+$nextElement).offset().top - 100},'slow');
	        $("#ajax_loading").hide();
      	}
   	});
}

{# Function to re-order the contact indexes #}
function reOrderContactAddresses($contactId)
{
	$("#ajax-contact-addresses-"+$contactId+" .message").hide();
	$(".form-error").remove();
	$contactAddressCount = 1;
	$numberOfElementsToProcess = $("li.contact-address-container[data-contact-id='"+$contactId+"']:visible").length;
	$numberOfElementsProcessed = 0;
	$("li.contact-address-container[data-contact-id='"+$contactId+"']:visible").each(function(index) {
		$row = $(this);
		if ($row.find("input.contact-address-display-order").val() != $contactAddressCount)
		{
			if ($row.find("input.contact-address-id").val() > 0)
			{
				$row.find("input.contact-address-requires-update").val("1");
			}
		}
		$row.find("input.contact-address-display-order").val($contactAddressCount);
	    $contactAddressCount++;
	    $numberOfElementsProcessed++;
	    if ($numberOfElementsProcessed == $numberOfElementsToProcess)
	    {
	    	updateContactAddresses($contactId);
	    }
	});
	$("li.contact-address-container[data-contact-id='"+$contactId+"']:hidden").each(function(index) {
		$(this).remove();
	});
}

{###########################}
{# CONTACT EMAIL ADDRESSES #}
{###########################}
		
{# Load the contact email addresses #}	
function loadContactEmailAddresses($contactId, $elementIndex)
{
	$.ajax({
		type: "GET",
		url: "{{ path('system_ajax_get_contact_email_addresses') }}",
		beforeSend: function() {
			if ($("#ajax-contact-email-addresses-"+$contactId).length < 1)
			{
				$("#contact-"+$elementIndex+" .contact-email-addresses").html('<div id="contact-email-address-loading-error-'+$contactId+'" class="ui-widget message margin-bottom-5 ui-helper-hidden"><div class="ui-state-error no-margin-top ui-corner-all"><span class="ui-icon ui-icon-alert"></span><p class="no-margin"><strong>ERROR:</strong> Sorry, there was a problem loading the contact email addresses.</p></div></div><div class="contact-email-addresses-loading" data-contact-id="'+$contactId+'" id="ajax-contact-email-addresses-loading-'+$contactId+'" class="ac"><p class="ac">Loading contact email addresses, please wait&hellip;</p><p class="ac"><img class="inline" alt="Loading" width="16" height="16" src="{{ asset('bundles/webilluminationadmin/images/loaders/ajax-loader-eeeeee.gif') }}" /></p></div><div id="ajax-contact-email-addresses-'+$contactId+'" class="ui-helper-hidden"></div>');
			}
			$("#ajax-contact-email-addresses-loading-"+$contactId).show();
			
		},
		data: {
			contactId: $contactId
		},
		error: function(data) {
  			$("#ajax-contact-email-addresses-loading-"+$contactId).hide();
      		$("#contact-email-address-loading-error-"+$contactId).fadeIn();
	  	},
		success: function(data) {
			$("#ajax-contact-email-addresses-"+$contactId).html(data);
			$("#ajax-contact-email-addresses-"+$contactId+" :checkbox:not(.no-uniform), #ajax-contact-email-addresses-"+$contactId+" :radio:not(.no-uniform), #ajax-contact-email-addresses-"+$contactId+" select:not(.no-uniform), #ajax-contact-email-addresses-"+$contactId+" :file:not(.no-uniform)").uniform();
			$("#ajax-contact-email-addresses-"+$contactId+" .button").each(function () {
    	        $(this).button({
        	    	icons: {
            	    	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
                	    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
    	    	});
        	});
        	$("#ajax-contact-email-addresses-"+$contactId+" .message.closeable").prepend('<span class="message-close ui-icon ui-icon-circle-close"></span>').find(".message-close").click(function() {
				$(this).parent().fadeOut(function() {
		        	$(this).hide();
		        });
		    });
			$("#ajax-contact-email-addresses-"+$contactId).sortable({
				placeholder: "highlighted-sortable",
				items: 'li',
				toleranceElement: '> div',
				update: function(event, ui) {
					reOrderContactEmailAddresses($contactId);
				}
			});
			$(".action-unselect-all-contact-email-addresses").hide();
			$(".action-confirm-delete-contact-email-addresses").hide();
	        $("#ajax-contact-email-addresses-"+$contactId+" .selector").addClass("full");
	        $("#ajax-contact-email-addresses-"+$contactId).fadeIn();
    	    $("#ajax-contact-email-addresses-loading-"+$contactId).hide();
		}
	});
}

{# Function to update all contact email addresses #}
function updateContactEmailAddresses($contactId)
{
	$errorOccurred = false;
	$numberOfElementsToProcess = $("input.contact-email-address-requires-update[data-contact-id='"+$contactId+"'][value='1']").length;
	$numberOfElementsProcessed = 0;
	if ($numberOfElementsToProcess > 0)
	{
		$("#ajax_loading").show();
		$("input.contact-email-address-requires-update[data-contact-id='"+$contactId+"'][value='1']").each(function(index) {
			$elementIndex = String($(this).attr("data-index"));
			$.ajax({
		    	url: "{{ path('system_ajax_update_contact_email_address') }}",
		      	type: "GET",
		      	dataType: "json",
		      	data: {
		      		id: $("#form-contact-email-address-id-"+$contactId+"-"+$elementIndex).val(),
		      		contactId: $contactId,
		      		contactEmailAddressTypeId: $("#form-contact-email-address-contact-email-address-type-id-"+$contactId+"-"+$elementIndex).val(),
		      		email: $("#form-contact-email-address-email-"+$contactId+"-"+$elementIndex).val(),
		      		displayOrder: $("#form-contact-email-address-display-order-"+$contactId+"-"+$elementIndex).val(),
		      		elementIndex: $elementIndex
		      	},
		      	error: function(data) {
		        	$errorOccurred = true;
		        	$("#contact-email-address-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-email-address-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact email addresses. Please try again.');
							$("#contact-email-address-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-email-address-success-message-text-"+$contactId).html('Your contact email addresses were successfully updated.');
							$("#contact-email-address-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-email-addresses-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	},
		      	success: function(data) {
	      			if (data.response == 'success')
	      			{
	      				$("#contact-email-address-"+data.contactId+"-"+data.elementIndex).removeClass("ui-state-error");
	      				$("#form-contact-email-address-id-"+data.contactId+"-"+data.elementIndex).val(data.id);
	      				$("#form-contact-email-address-requires-update-"+data.contactId+"-"+data.elementIndex).val("0");
	      			} else {
	      				$("#contact-email-address-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
	      				$errorOccurred = true;
	      			}
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-email-address-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact email addresses. Please try again.');
							$("#contact-email-address-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-email-address-success-message-text-"+$contactId).html('Your contact email addresses were successfully updated.');
							$("#contact-email-address-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-email-addresses-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	}
		   	});
		});
	}
}

{# Function to load new contact email addresses #}
function loadNewContactEmailAddress($contactId)
{
	$("#ajax_loading").show();
	$nextElement = parseInt($("#contact-email-address-count-"+$contactId).val()) + 1;
	$("#contact-email-address-count-"+$contactId).val($nextElement);
	$.ajax({
    	url: "{{ path('system_ajax_add_contact_email_address') }}",
      	type: "GET",
      	data: {
      		id: $nextElement,
      		contactId: $contactId
      	},
      	error: function(data) {
        	$("#contact-email-address-error-message-text-"+$contactId).html('Sorry, there was an error adding a new contact email address. Please try again.');
			$("#contact-email-address-error-message-"+$contactId).fadeIn();
      	},
      	success: function(data) {
  			$("#form-contact-email-addresses-container-"+$contactId).append(data);
			$("#contact-email-address-"+$contactId+"-"+$nextElement.toString()+" :checkbox:not(.no-uniform), #contact-email-address-"+$contactId+"-"+$nextElement.toString()+" :radio:not(.no-uniform), #contact-email-address-"+$contactId+"-"+$nextElement.toString()+" select:not(.no-uniform), #contact-email-address-"+$contactId+"-"+$nextElement.toString()+" :file:not(.no-uniform)").uniform();
			$("#contact-email-address-"+$contactId+"-"+$nextElement.toString()).fadeIn();
			$("#contact-email-address-"+$contactId+"-"+$nextElement+" .button").each(function () {
	            $(this).button({
	            	icons: {
	                	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
	                    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
	        	});
	        });
	        reOrderContactEmailAddresses($contactId);
	        $(".selector, .uploader").addClass("full");
	        $("html, body").animate({scrollTop: $("#contact-email-address-"+$contactId+"-"+$nextElement).offset().top - 100},'slow');
	        $("#ajax_loading").hide();
      	}
   	});
}

{# Function to re-order the contact indexes #}
function reOrderContactEmailAddresses($contactId)
{
	$("#ajax-contact-email-addresses-"+$contactId+" .message").hide();
	$(".form-error").remove();
	$contactEmailAddressCount = 1;
	$numberOfElementsToProcess = $("li.contact-email-address-container[data-contact-id='"+$contactId+"']:visible").length;
	$numberOfElementsProcessed = 0;
	$("li.contact-email-address-container[data-contact-id='"+$contactId+"']:visible").each(function(index) {
		$row = $(this);
		if ($row.find("input.contact-email-address-display-order").val() != $contactEmailAddressCount)
		{
			if ($row.find("input.contact-email-address-id").val() > 0)
			{
				$row.find("input.contact-email-address-requires-update").val("1");
			}
		}
		$row.find("input.contact-email-address-display-order").val($contactEmailAddressCount);
	    $contactEmailAddressCount++;
	    $numberOfElementsProcessed++;
	    if ($numberOfElementsProcessed == $numberOfElementsToProcess)
	    {
	    	updateContactEmailAddresses($contactId);
	    }
	});
	$("li.contact-email-address-container[data-contact-id='"+$contactId+"']:hidden").each(function(index) {
		$(this).remove();
	});
}

{#########################}
{# CONTACT WEB ADDRESSES #}
{#########################}
		
{# Load the contact web addresses #}	
function loadContactWebAddresses($contactId, $elementIndex)
{
	$.ajax({
		type: "GET",
		url: "{{ path('system_ajax_get_contact_web_addresses') }}",
		beforeSend: function() {
			if ($("#contact-"+$contactId+" .contact-web-addresses #ajax-contact-web-addresses-"+$contactId).length < 1)
			{
				$("#contact-"+$elementIndex+" .contact-web-addresses").html('<div id="contact-web-address-loading-error-'+$contactId+'" class="ui-widget message margin-bottom-5 ui-helper-hidden"><div class="ui-state-error no-margin-top ui-corner-all"><span class="ui-icon ui-icon-alert"></span><p class="no-margin"><strong>ERROR:</strong> Sorry, there was a problem loading the contact web addresses.</p></div></div><div class="contact-web-addresses-loading" data-contact-id="'+$contactId+'" id="ajax-contact-web-addresses-loading-'+$contactId+'" class="ac"><p class="ac">Loading contact web addresses, please wait&hellip;</p><p class="ac"><img class="inline" alt="Loading" width="16" height="16" src="{{ asset('bundles/webilluminationadmin/images/loaders/ajax-loader-eeeeee.gif') }}" /></p></div><div id="ajax-contact-web-addresses-'+$contactId+'" class="ui-helper-hidden"></div>');
			}
			$("#ajax-contact-web-addresses-loading-"+$contactId).show();
		},
		data: {
			contactId: $contactId
		},
		error: function(data) {
  			$("#ajax-contact-web-addresses-loading-"+$contactId).hide();
      		$("#contact-web-address-loading-error-"+$contactId).fadeIn();
	  	},
		success: function(data) {
			$("#ajax-contact-web-addresses-"+$contactId).html(data);
			$("#ajax-contact-web-addresses-"+$contactId+" :checkbox:not(.no-uniform), #ajax-contact-web-addresses-"+$contactId+" :radio:not(.no-uniform), #ajax-contact-web-addresses-"+$contactId+" select:not(.no-uniform), #ajax-contact-web-addresses-"+$contactId+" :file:not(.no-uniform)").uniform();
			$("#ajax-contact-web-addresses-"+$contactId+" .button").each(function () {
    	        $(this).button({
        	    	icons: {
            	    	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
                	    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
    	    	});
        	});
        	$("#ajax-contact-web-addresses-"+$contactId+" .message.closeable").prepend('<span class="message-close ui-icon ui-icon-circle-close"></span>').find(".message-close").click(function() {
				$(this).parent().fadeOut(function() {
		        	$(this).hide();
		        });
		    });
			$("#ajax-contact-web-addresses-"+$contactId).sortable({
				placeholder: "highlighted-sortable",
				items: 'li',
				toleranceElement: '> div',
				update: function(event, ui) {
					reOrderContactWebAddresses($contactId);
				}
			});
			$(".action-unselect-all-contact-web-addresses").hide();
			$(".action-confirm-delete-contact-web-addresses").hide();
	        $("#ajax-contact-web-addresses-"+$contactId+" .selector").addClass("full");
	        $("#ajax-contact-web-addresses-"+$contactId).fadeIn();
    	    $("#ajax-contact-web-addresses-loading-"+$contactId).hide();
		}
	});
}

{# Function to update all contact web addresses #}
function updateContactWebAddresses($contactId)
{
	$errorOccurred = false;
	$numberOfElementsToProcess = $("input.contact-web-address-requires-update[data-contact-id='"+$contactId+"'][value='1']").length;
	$numberOfElementsProcessed = 0;
	if ($numberOfElementsToProcess > 0)
	{
		$("#ajax_loading").show();
		$("input.contact-web-address-requires-update[data-contact-id='"+$contactId+"'][value='1']").each(function(index) {
			$elementIndex = String($(this).attr("data-index"));
			$.ajax({
		    	url: "{{ path('system_ajax_update_contact_web_address') }}",
		      	type: "GET",
		      	dataType: "json",
		      	data: {
		      		id: $("#form-contact-web-address-id-"+$contactId+"-"+$elementIndex).val(),
		      		contactId: $contactId,
		      		contactWebAddressTypeId: $("#form-contact-web-address-contact-web-address-type-id-"+$contactId+"-"+$elementIndex).val(),
		      		url: $("#form-contact-web-address-url-"+$contactId+"-"+$elementIndex).val(),
		      		displayOrder: $("#form-contact-web-address-display-order-"+$contactId+"-"+$elementIndex).val(),
		      		elementIndex: $elementIndex
		      	},
		      	error: function(data) {
		        	$errorOccurred = true;
		        	$("#contact-web-address-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-web-address-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact web addresses. Please try again.');
							$("#contact-web-address-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-web-address-success-message-text-"+$contactId).html('Your contact web addresses were successfully updated.');
							$("#contact-web-address-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-web-addresses-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	},
		      	success: function(data) {
	      			if (data.response == 'success')
	      			{
	      				$("#contact-web-address-"+data.contactId+"-"+data.elementIndex).removeClass("ui-state-error");
	      				$("#form-contact-web-address-id-"+data.contactId+"-"+data.elementIndex).val(data.id);
	      				$("#form-contact-web-address-requires-update-"+data.contactId+"-"+data.elementIndex).val("0");
	      			} else {
	      				$("#contact-web-address-"+$contactId+"-"+$elementIndex).addClass("ui-state-error");
	      				$errorOccurred = true;
	      			}
		        	$numberOfElementsProcessed++;
		        	if ($numberOfElementsToProcess == $numberOfElementsProcessed)
		        	{
		        		if ($errorOccurred == true)
						{
							$("#contact-web-address-error-message-text-"+$contactId).html('Problems occurred while trying to update your contact web addresses. Please try again.');
							$("#contact-web-address-error-message-"+$contactId).fadeIn();
						} else {
							$("#contact-web-address-success-message-text-"+$contactId).html('Your contact web addresses were successfully updated.');
							$("#contact-web-address-success-message-"+$contactId).fadeIn();
						}
						$("html, body").animate({scrollTop: $("#ajax-contact-web-addresses-"+$contactId).offset().top + 35},'slow');
						$("#ajax_loading").hide();
		        	}
		      	}
		   	});
		});
	}
}

{# Function to load new contact web addresses #}
function loadNewContactWebAddress($contactId)
{
	$("#ajax_loading").show();
	$nextElement = parseInt($("#contact-web-address-count-"+$contactId).val()) + 1;
	$("#contact-web-address-count-"+$contactId).val($nextElement);
	$.ajax({
    	url: "{{ path('system_ajax_add_contact_web_address') }}",
      	type: "GET",
      	data: {
      		id: $nextElement,
      		contactId: $contactId
      	},
      	error: function(data) {
        	$("#contact-web-address-error-message-text-"+$contactId).html('Sorry, there was an error adding a new contact web address. Please try again.');
			$("#contact-web-address-error-message-"+$contactId).fadeIn();
      	},
      	success: function(data) {
  			$("#form-contact-web-addresses-container-"+$contactId).append(data);
			$("#contact-web-address-"+$contactId+"-"+$nextElement.toString()+" :checkbox:not(.no-uniform), #contact-web-address-"+$contactId+"-"+$nextElement.toString()+" :radio:not(.no-uniform), #contact-web-address-"+$contactId+"-"+$nextElement.toString()+" select:not(.no-uniform), #contact-web-address-"+$contactId+"-"+$nextElement.toString()+" :file:not(.no-uniform)").uniform();
			$("#contact-web-address-"+$contactId+"-"+$nextElement.toString()).fadeIn();
			$("#contact-web-address-"+$contactId+"-"+$nextElement+" .button").each(function () {
	            $(this).button({
	            	icons: {
	                	primary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-primary'):null, 
	                    secondary: $(this).attr('data-icon-primary')?$(this).attr('data-icon-secondary'):null
	                }, 
	               	text: $(this).attr('data-icon-only') === 'true'?false:true
	        	});
	        });
	        reOrderContactWebAddresses($contactId);
	        $(".selector, .uploader").addClass("full");
	        $("html, body").animate({scrollTop: $("#contact-web-address-"+$contactId+"-"+$nextElement).offset().top - 100},'slow');
	        $("#ajax_loading").hide();
      	}
   	});
}

{# Function to re-order the contact indexes #}
function reOrderContactWebAddresses($contactId)
{
	$("#ajax-contact-web-addresses-"+$contactId+" .message").hide();
	$(".form-error").remove();
	$contactWebAddressCount = 1;
	$numberOfElementsToProcess = $("li.contact-web-address-container[data-contact-id='"+$contactId+"']:visible").length;
	$numberOfElementsProcessed = 0;
	$("li.contact-web-address-container[data-contact-id='"+$contactId+"']:visible").each(function(index) {
		$row = $(this);
		if ($row.find("input.contact-web-address-display-order").val() != $contactWebAddressCount)
		{
			if ($row.find("input.contact-web-address-id").val() > 0)
			{
				$row.find("input.contact-web-address-requires-update").val("1");
			}
		}
		$row.find("input.contact-web-address-display-order").val($contactWebAddressCount);
	    $contactWebAddressCount++;
	    $numberOfElementsProcessed++;
	    if ($numberOfElementsProcessed == $numberOfElementsToProcess)
	    {
	    	updateContactWebAddresses($contactId);
	    }
	});
	$("li.contact-web-address-container[data-contact-id='"+$contactId+"']:hidden").each(function(index) {
		$(this).remove();
	});
}