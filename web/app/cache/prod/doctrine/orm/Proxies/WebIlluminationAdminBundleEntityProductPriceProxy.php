<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class WebIlluminationAdminBundleEntityProductPriceProxy extends \WebIllumination\AdminBundle\Entity\ProductPrice implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setProductId($productId)
    {
        $this->__load();
        return parent::setProductId($productId);
    }

    public function getProductId()
    {
        $this->__load();
        return parent::getProductId();
    }

    public function setSupplierId($supplierId)
    {
        $this->__load();
        return parent::setSupplierId($supplierId);
    }

    public function getSupplierId()
    {
        $this->__load();
        return parent::getSupplierId();
    }

    public function setCostPrice($costPrice)
    {
        $this->__load();
        return parent::setCostPrice($costPrice);
    }

    public function getCostPrice()
    {
        $this->__load();
        return parent::getCostPrice();
    }

    public function getCostPriceExcludingVat()
    {
        $this->__load();
        return parent::getCostPriceExcludingVat();
    }

    public function setRecommendedRetailPrice($recommendedRetailPrice)
    {
        $this->__load();
        return parent::setRecommendedRetailPrice($recommendedRetailPrice);
    }

    public function getRecommendedRetailPrice()
    {
        $this->__load();
        return parent::getRecommendedRetailPrice();
    }

    public function getRecommendedRetailPriceExcludingVat()
    {
        $this->__load();
        return parent::getRecommendedRetailPriceExcludingVat();
    }

    public function setListPrice($listPrice)
    {
        $this->__load();
        return parent::setListPrice($listPrice);
    }

    public function getListPrice()
    {
        $this->__load();
        return parent::getListPrice();
    }

    public function getListPriceExcludingVat()
    {
        $this->__load();
        return parent::getListPriceExcludingVat();
    }

    public function getProfit()
    {
        $this->__load();
        return parent::getProfit();
    }

    public function getProfitExcludingVat()
    {
        $this->__load();
        return parent::getProfitExcludingVat();
    }

    public function getProfitPercentage()
    {
        $this->__load();
        return parent::getProfitPercentage();
    }

    public function getProfitPercentageClass()
    {
        $this->__load();
        return parent::getProfitPercentageClass();
    }

    public function getMarkupPercentage()
    {
        $this->__load();
        return parent::getMarkupPercentage();
    }

    public function getMarkupPercentageClass()
    {
        $this->__load();
        return parent::getMarkupPercentageClass();
    }

    public function getDiscount()
    {
        $this->__load();
        return parent::getDiscount();
    }

    public function getSavings()
    {
        $this->__load();
        return parent::getSavings();
    }

    public function setCurrencyCode($currencyCode)
    {
        $this->__load();
        return parent::setCurrencyCode($currencyCode);
    }

    public function getCurrencyCode()
    {
        $this->__load();
        return parent::getCurrencyCode();
    }

    public function setDisplayOrder($displayOrder)
    {
        $this->__load();
        return parent::setDisplayOrder($displayOrder);
    }

    public function getDisplayOrder()
    {
        $this->__load();
        return parent::getDisplayOrder();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'productId', 'supplierId', 'costPrice', 'recommendedRetailPrice', 'listPrice', 'currencyCode', 'displayOrder', 'createdAt', 'updatedAt');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}