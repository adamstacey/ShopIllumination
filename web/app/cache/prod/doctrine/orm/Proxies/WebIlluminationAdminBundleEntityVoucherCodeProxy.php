<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class WebIlluminationAdminBundleEntityVoucherCodeProxy extends \WebIllumination\AdminBundle\Entity\VoucherCode implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setMinimumOrderValue($minimumOrderValue)
    {
        $this->__load();
        return parent::setMinimumOrderValue($minimumOrderValue);
    }

    public function getMinimumOrderValue()
    {
        $this->__load();
        return parent::getMinimumOrderValue();
    }

    public function setDiscount($discount)
    {
        $this->__load();
        return parent::setDiscount($discount);
    }

    public function getDiscount()
    {
        $this->__load();
        return parent::getDiscount();
    }

    public function setDiscountType($discountType)
    {
        $this->__load();
        return parent::setDiscountType($discountType);
    }

    public function getDiscountType()
    {
        $this->__load();
        return parent::getDiscountType();
    }

    public function getDiscountTypeName()
    {
        $this->__load();
        return parent::getDiscountTypeName();
    }

    public function getDiscountTypeSymbol()
    {
        $this->__load();
        return parent::getDiscountTypeSymbol();
    }

    public function setDiscountUse($discountUse)
    {
        $this->__load();
        return parent::setDiscountUse($discountUse);
    }

    public function getDiscountUse()
    {
        $this->__load();
        return parent::getDiscountUse();
    }

    public function getDiscountUseName()
    {
        $this->__load();
        return parent::getDiscountUseName();
    }

    public function setNumberOfUses($numberOfUses)
    {
        $this->__load();
        return parent::setNumberOfUses($numberOfUses);
    }

    public function getNumberOfUses()
    {
        $this->__load();
        return parent::getNumberOfUses();
    }

    public function setNumberUsed($numberUsed)
    {
        $this->__load();
        return parent::setNumberUsed($numberUsed);
    }

    public function getNumberUsed()
    {
        $this->__load();
        return parent::getNumberUsed();
    }

    public function setBrands($brands)
    {
        $this->__load();
        return parent::setBrands($brands);
    }

    public function getBrands()
    {
        $this->__load();
        return parent::getBrands();
    }

    public function setDepartments($departments)
    {
        $this->__load();
        return parent::setDepartments($departments);
    }

    public function getDepartments()
    {
        $this->__load();
        return parent::getDepartments();
    }

    public function setProducts($products)
    {
        $this->__load();
        return parent::setProducts($products);
    }

    public function getProducts()
    {
        $this->__load();
        return parent::getProducts();
    }

    public function setOrders($orders)
    {
        $this->__load();
        return parent::setOrders($orders);
    }

    public function getOrders()
    {
        $this->__load();
        return parent::getOrders();
    }

    public function setCreator($creator)
    {
        $this->__load();
        return parent::setCreator($creator);
    }

    public function getCreator()
    {
        $this->__load();
        return parent::getCreator();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function getActiveColour()
    {
        $this->__load();
        return parent::getActiveColour();
    }

    public function getActiveIcon()
    {
        $this->__load();
        return parent::getActiveIcon();
    }

    public function setValidFromDate($validFromDate)
    {
        $this->__load();
        return parent::setValidFromDate($validFromDate);
    }

    public function getValidFromDate()
    {
        $this->__load();
        return parent::getValidFromDate();
    }

    public function setExpiryDate($expiryDate)
    {
        $this->__load();
        return parent::setExpiryDate($expiryDate);
    }

    public function getExpiryDate()
    {
        $this->__load();
        return parent::getExpiryDate();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'code', 'description', 'minimumOrderValue', 'discount', 'discountType', 'discountUse', 'numberOfUses', 'numberUsed', 'brands', 'departments', 'products', 'orders', 'creator', 'active', 'validFromDate', 'expiryDate', 'createdAt', 'updatedAt');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}