<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class WebIlluminationAdminBundleEntityMessageProxy extends \WebIllumination\AdminBundle\Entity\Message implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setMessageType($messageType)
    {
        $this->__load();
        return parent::setMessageType($messageType);
    }

    public function getMessageType()
    {
        $this->__load();
        return parent::getMessageType();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setEmailAddress($emailAddress)
    {
        $this->__load();
        return parent::setEmailAddress($emailAddress);
    }

    public function getEmailAddress()
    {
        $this->__load();
        return parent::getEmailAddress();
    }

    public function setContactNumber($contactNumber)
    {
        $this->__load();
        return parent::setContactNumber($contactNumber);
    }

    public function getContactNumber()
    {
        $this->__load();
        return parent::getContactNumber();
    }

    public function setMessage($message)
    {
        $this->__load();
        return parent::setMessage($message);
    }

    public function getMessage()
    {
        $this->__load();
        return parent::getMessage();
    }

    public function setPrinted($printed)
    {
        $this->__load();
        return parent::setPrinted($printed);
    }

    public function getPrinted()
    {
        $this->__load();
        return parent::getPrinted();
    }

    public function setViewed($viewed)
    {
        $this->__load();
        return parent::setViewed($viewed);
    }

    public function getViewed()
    {
        $this->__load();
        return parent::getViewed();
    }

    public function setActioned($actioned)
    {
        $this->__load();
        return parent::setActioned($actioned);
    }

    public function getActioned()
    {
        $this->__load();
        return parent::getActioned();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'messageType', 'name', 'emailAddress', 'contactNumber', 'message', 'printed', 'viewed', 'actioned', 'createdAt', 'updatedAt');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}