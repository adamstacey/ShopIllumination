<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class WebIlluminationAdminBundleEntityDepartmentDescriptionProxy extends \WebIllumination\AdminBundle\Entity\DepartmentDescription implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setDepartmentId($departmentId)
    {
        $this->__load();
        return parent::setDepartmentId($departmentId);
    }

    public function getDepartmentId()
    {
        $this->__load();
        return parent::getDepartmentId();
    }

    public function setLocale($locale)
    {
        $this->__load();
        return parent::setLocale($locale);
    }

    public function getLocale()
    {
        $this->__load();
        return parent::getLocale();
    }

    public function setDepartment($department)
    {
        $this->__load();
        return parent::setDepartment($department);
    }

    public function getDepartment()
    {
        $this->__load();
        return parent::getDepartment();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setShortDescription($shortDescription)
    {
        $this->__load();
        return parent::setShortDescription($shortDescription);
    }

    public function getShortDescription()
    {
        $this->__load();
        return parent::getShortDescription();
    }

    public function setMenuTitle($menuTitle)
    {
        $this->__load();
        return parent::setMenuTitle($menuTitle);
    }

    public function getMenuTitle()
    {
        $this->__load();
        return parent::getMenuTitle();
    }

    public function setPageTitle($pageTitle)
    {
        $this->__load();
        return parent::setPageTitle($pageTitle);
    }

    public function getPageTitle()
    {
        $this->__load();
        return parent::getPageTitle();
    }

    public function setHeader($header)
    {
        $this->__load();
        return parent::setHeader($header);
    }

    public function getHeader()
    {
        $this->__load();
        return parent::getHeader();
    }

    public function setMetaDescription($metaDescription)
    {
        $this->__load();
        return parent::setMetaDescription($metaDescription);
    }

    public function getMetaDescription()
    {
        $this->__load();
        return parent::getMetaDescription();
    }

    public function setMetaKeywords($metaKeywords)
    {
        $this->__load();
        return parent::setMetaKeywords($metaKeywords);
    }

    public function getMetaKeywords()
    {
        $this->__load();
        return parent::getMetaKeywords();
    }

    public function setSearchWords($searchWords)
    {
        $this->__load();
        return parent::setSearchWords($searchWords);
    }

    public function getSearchWords()
    {
        $this->__load();
        return parent::getSearchWords();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setGoogleDepartment($googleDepartment)
    {
        $this->__load();
        return parent::setGoogleDepartment($googleDepartment);
    }

    public function getGoogleDepartment()
    {
        $this->__load();
        return parent::getGoogleDepartment();
    }

    public function setEbayDepartment($ebayDepartment)
    {
        $this->__load();
        return parent::setEbayDepartment($ebayDepartment);
    }

    public function getEbayDepartment()
    {
        $this->__load();
        return parent::getEbayDepartment();
    }

    public function setAmazonDepartment($amazonDepartment)
    {
        $this->__load();
        return parent::setAmazonDepartment($amazonDepartment);
    }

    public function getAmazonDepartment()
    {
        $this->__load();
        return parent::getAmazonDepartment();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'departmentId', 'locale', 'department', 'googleDepartment', 'ebayDepartment', 'amazonDepartment', 'description', 'shortDescription', 'menuTitle', 'pageTitle', 'header', 'metaDescription', 'metaKeywords', 'searchWords', 'createdAt', 'updatedAt');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}