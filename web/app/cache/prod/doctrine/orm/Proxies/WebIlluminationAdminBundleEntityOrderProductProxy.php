<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class WebIlluminationAdminBundleEntityOrderProductProxy extends \WebIllumination\AdminBundle\Entity\OrderProduct implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setOrderId($orderId)
    {
        $this->__load();
        return parent::setOrderId($orderId);
    }

    public function getOrderId()
    {
        $this->__load();
        return parent::getOrderId();
    }

    public function setBasketItemId($basketItemId)
    {
        $this->__load();
        return parent::setBasketItemId($basketItemId);
    }

    public function getBasketItemId()
    {
        $this->__load();
        return parent::getBasketItemId();
    }

    public function setProductId($productId)
    {
        $this->__load();
        return parent::setProductId($productId);
    }

    public function getProductId()
    {
        $this->__load();
        return parent::getProductId();
    }

    public function setProduct($product)
    {
        $this->__load();
        return parent::setProduct($product);
    }

    public function getProduct()
    {
        $this->__load();
        return parent::getProduct();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setHeader($header)
    {
        $this->__load();
        return parent::setHeader($header);
    }

    public function getHeader()
    {
        $this->__load();
        return parent::getHeader();
    }

    public function setProductCode($productCode)
    {
        $this->__load();
        return parent::setProductCode($productCode);
    }

    public function getProductCode()
    {
        $this->__load();
        return parent::getProductCode();
    }

    public function setBrand($brand)
    {
        $this->__load();
        return parent::setBrand($brand);
    }

    public function getBrand()
    {
        $this->__load();
        return parent::getBrand();
    }

    public function setShortDescription($shortDescription)
    {
        $this->__load();
        return parent::setShortDescription($shortDescription);
    }

    public function getShortDescription()
    {
        $this->__load();
        return parent::getShortDescription();
    }

    public function setQuantity($quantity)
    {
        $this->__load();
        return parent::setQuantity($quantity);
    }

    public function getQuantity()
    {
        $this->__load();
        return parent::getQuantity();
    }

    public function setUnitCost($unitCost)
    {
        $this->__load();
        return parent::setUnitCost($unitCost);
    }

    public function getUnitCost()
    {
        $this->__load();
        return parent::getUnitCost();
    }

    public function setRecommendedRetailPrice($recommendedRetailPrice)
    {
        $this->__load();
        return parent::setRecommendedRetailPrice($recommendedRetailPrice);
    }

    public function getRecommendedRetailPrice()
    {
        $this->__load();
        return parent::getRecommendedRetailPrice();
    }

    public function setDiscount($discount)
    {
        $this->__load();
        return parent::setDiscount($discount);
    }

    public function getDiscount()
    {
        $this->__load();
        return parent::getDiscount();
    }

    public function setSavings($savings)
    {
        $this->__load();
        return parent::setSavings($savings);
    }

    public function getSavings()
    {
        $this->__load();
        return parent::getSavings();
    }

    public function setVat($vat)
    {
        $this->__load();
        return parent::setVat($vat);
    }

    public function getVat()
    {
        $this->__load();
        return parent::getVat();
    }

    public function setSubTotal($subTotal)
    {
        $this->__load();
        return parent::setSubTotal($subTotal);
    }

    public function getSubTotal()
    {
        $this->__load();
        return parent::getSubTotal();
    }

    public function setSelectedOptions($selectedOptions)
    {
        $this->__load();
        return parent::setSelectedOptions($selectedOptions);
    }

    public function getSelectedOptions()
    {
        $this->__load();
        return parent::getSelectedOptions();
    }

    public function setSelectedOptionLabels($selectedOptionLabels)
    {
        $this->__load();
        return parent::setSelectedOptionLabels($selectedOptionLabels);
    }

    public function getSelectedOptionLabels()
    {
        $this->__load();
        return parent::getSelectedOptionLabels();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'orderId', 'basketItemId', 'productId', 'product', 'url', 'header', 'productCode', 'brand', 'shortDescription', 'quantity', 'unitCost', 'recommendedRetailPrice', 'discount', 'savings', 'vat', 'subTotal', 'selectedOptions', 'selectedOptionLabels', 'createdAt', 'updatedAt');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}